@model IEnumerable<NBDGreenerGrass.Models.Project>

<br />
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="fw-bold">PROJECTS</h1>
    <a asp-action="Create" class="btn btn-dark">Create New</a>
</div>

<form asp-action="Index" method="get" class="mb-4">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="mb-3">
        <button class="btn btn-info" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search @ViewData["numberFilters"]
        </button>
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Search Client Name:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Search Project Street Address:</label>
                        @Html.TextBox("StreetString", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4 d-flex justify-content-end align-items-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-primary me-2" />
                        <a asp-action="Index" class="btn btn-secondary">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Client.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Start)</th>
                <th>@Html.DisplayNameFor(model => model.End)</th>
                <th>@Html.DisplayNameFor(model => model.Amount)</th>
                <th>@Html.DisplayNameFor(model => model.Created)</th>
                <th>@Html.DisplayName("Address")</th> 
                <th>@Html.DisplayName("City")</th>
                <th>@Html.DisplayName("Province")</th>
                <th>@Html.DisplayName("Postal")</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Client.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Start)</td>
                    <td>@Html.DisplayFor(modelItem => item.End)</td>
                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    <td>@Html.DisplayFor(modelItem => item.Created)</td>
                    <td>@Html.DisplayFor(modelItem => item.Street)</td>
                    <td>@Html.DisplayFor(modelItem => item.City)</td>
                    <td>@Html.DisplayFor(modelItem => item.Province)</td>
                    <td>@Html.DisplayFor(modelItem => item.Postal)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-outline-secondary">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-outline-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
