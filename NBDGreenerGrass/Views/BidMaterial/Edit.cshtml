@model NBDGreenerGrass.Models.BidMaterial

@{
    ViewData["Title"] = "Edit";
}

<br/>

<h2 class="text-center">Edit Bid Material</h2>

<div class="container">

    <div class="card mt-4">
        <div class="card-header">
            Budget Details
        </div>
        <div class="card-body">
            <dl class="row">
                <label for="projectCost">Project Cost:</label>
                <span id="projectCostLookup" name="projectCostLookup">@ViewBag.ProjectCost</span>
                <label for="bidTotalAmount">Total cost:</label>
                <span id="totalCost">@((ViewBag.TotalCost != null ? ViewBag.TotalCost.ToString("F2") : "0"))</span>
            </dl>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 offset-md-3">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="BidID" />
                <input type="hidden" asp-for="InventoryID" />
                <div class="form-group">
                    <label asp-for="InventoryDesc" class="control-label">Description</label>
                    <input asp-for="InventoryDesc" class="form-control" readonly />
                    <span asp-validation-for="InventoryDesc" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="InventorySize" class="control-label">Size</label>
                    <input asp-for="InventorySize" class="form-control" readonly />
                    <span asp-validation-for="InventorySize" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="InventoryCode" class="control-label">Code</label>
                    <input asp-for="InventoryCode" class="form-control" readonly />
                    <span asp-validation-for="InventoryCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="InventoryListPrice" class="control-label">List Price</label>
                    <input asp-for="InventoryListPrice" class="form-control" readonly />
                    <span asp-validation-for="InventoryListPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Quantity" class="control-label">Quantity</label>
                    <input asp-for="Quantity" min="1" class="form-control" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group text-center">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a asp-action="Details" asp-controller="Bids" asp-route-id="@Model.BidID">Back to List</a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var initialTotalCost = parseFloat($("#totalCost").text());
            var quantityInput = $("input[name='Quantity']");
            var listPriceInput = $("#InventoryListPrice");

            // Function to calculate and update the total cost
            function updateTotalCost() {
                var additionalCost = 0;
                var quantity = parseFloat(quantityInput.val());
                var listPrice = parseFloat(listPriceInput.val());
                additionalCost += quantity * listPrice;
                var totalCost = initialTotalCost + additionalCost;
                $("#totalCost").text(totalCost.toFixed(2));
            }

            // Call the function on page load
            updateTotalCost();

            // Call the function when the quantity input is changed
            quantityInput.change(updateTotalCost);

            // Call the function when the list price input is changed
            listPriceInput.change(updateTotalCost);
        });
    </script>
}
