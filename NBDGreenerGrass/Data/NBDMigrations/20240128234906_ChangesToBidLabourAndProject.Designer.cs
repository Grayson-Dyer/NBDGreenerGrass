// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBDGreenerGrass.Data;

#nullable disable

namespace NBDGreenerGrass.Data.NBDMigrations
{
    [DbContext(typeof(NBDContext))]
    [Migration("20240128234906_ChangesToBidLabourAndProject")]
    partial class ChangesToBidLabourAndProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("NBDGreenerGrass.Models.Bid", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Stage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("StaffID");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.BidLabour", b =>
                {
                    b.Property<int>("BidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LabourID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HoursWorked")
                        .HasColumnType("INTEGER");

                    b.HasKey("BidID", "LabourID");

                    b.HasIndex("LabourID");

                    b.ToTable("BidLabours");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.BidMaterial", b =>
                {
                    b.Property<int>("BidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventoryID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BidID", "InventoryID");

                    b.HasIndex("InventoryID");

                    b.ToTable("BidMaterials");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Labour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Labours");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateMade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.ProjectStaff", b =>
                {
                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectID", "StaffID");

                    b.HasIndex("StaffID");

                    b.ToTable("ProjectStaffs");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Staff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Bid", b =>
                {
                    b.HasOne("NBDGreenerGrass.Models.Project", "Project")
                        .WithMany("Bids")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBDGreenerGrass.Models.Staff", null)
                        .WithMany("Bids")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.BidLabour", b =>
                {
                    b.HasOne("NBDGreenerGrass.Models.Bid", "Bid")
                        .WithMany("BidLabours")
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBDGreenerGrass.Models.Labour", "Labour")
                        .WithMany()
                        .HasForeignKey("LabourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Labour");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.BidMaterial", b =>
                {
                    b.HasOne("NBDGreenerGrass.Models.Bid", "Bid")
                        .WithMany("BidMaterials")
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBDGreenerGrass.Models.Inventory", "inventory")
                        .WithMany()
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("inventory");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Project", b =>
                {
                    b.HasOne("NBDGreenerGrass.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.ProjectStaff", b =>
                {
                    b.HasOne("NBDGreenerGrass.Models.Project", "Project")
                        .WithMany("ProjectStaffs")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBDGreenerGrass.Models.Staff", "Staff")
                        .WithMany("projectStaffs")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Bid", b =>
                {
                    b.Navigation("BidLabours");

                    b.Navigation("BidMaterials");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Project", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("ProjectStaffs");
                });

            modelBuilder.Entity("NBDGreenerGrass.Models.Staff", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("projectStaffs");
                });
#pragma warning restore 612, 618
        }
    }
}
